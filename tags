!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
$NVIM_TUI_ENABLE_TRUE_COLOR	nvim/init.vim	/^  let $NVIM_TUI_ENABLE_TRUE_COLOR=1$/;"	v
0	nvim/coc-settings.json	/^      "filetypes": ["go"]$/;"	s	array:languageserver.golang.filetypes
0	nvim/coc-settings.json	/^      "rootPatterns": ["go.mod"],$/;"	s	array:languageserver.golang.rootPatterns
<C-P>	nvim/mapping.vim	/^nnoremap <silent> <C-P> :GFiles --cached --others --exclude-standard<CR>$/;"	m
<F2>	nvim/mapping.vim	/^nnoremap <silent> <F2> :bp<CR>$/;"	m
<F3>	nvim/mapping.vim	/^nnoremap <silent> <F3> :bn<CR>$/;"	m
<Leader>r	nvim/mapping.vim	/^map <silent> <Leader>r :source ~\/.config\/nvim\/init.vim<CR>:echo "NVIM Reloaded"<CR>$/;"	m
<leader><tab>	nvim/mapping.vim	/^nnoremap <silent> <leader><tab> :b#<CR>$/;"	m
<leader>b	nvim/mapping.vim	/^nnoremap <silent> <leader>b :Buffers<CR>$/;"	m
<leader>c	nvim/mapping.vim	/^nnoremap <silent> <leader>c :echo expand("%:h")<CR>:e %:h\/$/;"	m
<leader>e	nvim/mapping.vim	/^nnoremap <silent> <leader>e :NERDTreeToggle %<CR>$/;"	m
<leader>f	nvim/mapping.vim	/^nnoremap <silent> <leader>f :NERDTreeToggle<CR>$/;"	m
<leader>i	nvim/mapping.vim	/^nnoremap <leader>i :%s\/<C-R><C-W>\/\/g<Left><Left>$/;"	m
<leader>l	nvim/mapping.vim	/^nnoremap <silent> <leader>l :BLines<CR>$/;"	m
<leader>o	nvim/mapping.vim	/^nnoremap <silent> <leader>o :Files %:h\/..<CR>$/;"	m
<leader>p	nvim/mapping.vim	/^nnoremap <silent> <leader>p :Files %:h<CR>$/;"	m
<leader>s	nvim/mapping.vim	/^nnoremap <silent> <leader>s :Rg<CR>$/;"	m
<leader>t	nvim/mapping.vim	/^nnoremap <silent> <leader>t :BTags<CR>$/;"	m
<leader>w	nvim/mapping.vim	/^nnoremap <silent> <leader>w <C-W>$/;"	m
<s-tab>	nvim/plugins.vim	/^inoremap <expr><s-tab> pumvisible() ? "\\<c-p>" : "\\<s-tab>"$/;"	m
<tab>	nvim/plugins.vim	/^inoremap <expr><tab> pumvisible() ? "\\<c-n>" : "\\<tab>"$/;"	m
Bdo	nvim/mapping.vim	/^command! Bdo %bd|e#$/;"	c
LuaHighlight	nvim/settings.vim	/^augroup LuaHighlight$/;"	a
command	nvim/coc-settings.json	/^      "command": "gopls",$/;"	s	object:languageserver.golang
filetypes	nvim/coc-settings.json	/^      "filetypes": ["go"]$/;"	a	object:languageserver.golang
g:deoplete#enable_at_startup	nvim/plugins.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:go_auto_type_info	nvim/plugins.vim	/^let g:go_auto_type_info = 1$/;"	v
g:go_fmt_command	nvim/plugins.vim	/^let g:go_fmt_command = "goimports"$/;"	v
g:go_highlight_build_constraints	nvim/plugins.vim	/^let g:go_highlight_build_constraints = 1$/;"	v
g:go_highlight_extra_types	nvim/plugins.vim	/^let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_fields	nvim/plugins.vim	/^let g:go_highlight_fields = 1$/;"	v
g:go_highlight_function_calls	nvim/plugins.vim	/^let g:go_highlight_function_calls = 1$/;"	v
g:go_highlight_function_parameters	nvim/plugins.vim	/^let g:go_highlight_function_parameters = 1$/;"	v
g:go_highlight_functions	nvim/plugins.vim	/^let g:go_highlight_functions = 1$/;"	v
g:go_highlight_methods	nvim/plugins.vim	/^let g:go_highlight_methods = 1$/;"	v
g:go_highlight_operators	nvim/plugins.vim	/^let g:go_highlight_operators = 1$/;"	v
g:go_highlight_structs	nvim/plugins.vim	/^let g:go_highlight_structs = 1$/;"	v
g:go_highlight_types	nvim/plugins.vim	/^let g:go_highlight_types = 1$/;"	v
g:gutentags_file_list_command	nvim/plugins.vim	/^  let g:gutentags_file_list_command = 'rg --files'$/;"	v
golang	nvim/coc-settings.json	/^    "golang": {$/;"	o	object:languageserver
languageserver	nvim/coc-settings.json	/^  "languageserver": {$/;"	o
mapleader	nvim/init.vim	/^let mapleader = "\\<Space>"$/;"	v
rmshit	scripts/rmshit.py	/^def rmshit():$/;"	f
rootPatterns	nvim/coc-settings.json	/^      "rootPatterns": ["go.mod"],$/;"	a	object:languageserver.golang
shittyfiles	scripts/rmshit.py	/^shittyfiles = [$/;"	v
version	fonts.conf	/^<?xml version='1.0'?>$/;"	k
yesno	scripts/rmshit.py	/^def yesno(question, default="n"):$/;"	f
